<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select = 1;
xSelector = 120; //224
ySelector = 48;
xSeperation = 560;
ySeperation = 40;

settingKey = false;     //sets whether or not a key is getting set
resetPrompt = false;    //shows the message that controls were reset

strSelect[1] = "Left Button";
strSelect[2] = "Right Button";
strSelect[3] = "Up Button";
strSelect[4] = "Down Button";
strSelect[5] = "Jump Button";
strSelect[6] = "Shoot Button";
strSelect[7] = "Restart Button";
strSelect[8] = "Skip Button";
strSelect[9] = "Suicide Button";
strSelect[10] = "Pause Button";
strSelect[11] = "Reset Controls";

playerIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>resetPrompt = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animate player sprite
playerIndex = (playerIndex + 1/5) mod 4;

if (!settingKey)
{
    if (keyboard_check_pressed(vk_up))    //global.upbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select -= 1;
        if(select &lt; 1)
            select = 11;
    }
    else if (keyboard_check_pressed(vk_down))   //global.downbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select += 1;
        if(select &gt; 11)
            select = 1;
    }
    else if (keyboard_check_pressed(vk_shift)) //global.jumpbutton
    {
        if (select != 11)
        {
            settingKey = true;
        }
        else
        {
            //default controls
            global.leftbutton = vk_left;
            global.rightbutton = vk_right;
            global.upbutton = vk_up;
            global.downbutton = vk_down;
            global.jumpbutton = vk_shift;
            global.shotbutton = ord("Z");
            global.restartbutton = ord("R");
            global.skipbutton = ord("S");
            global.suicidebutton = ord("Q");
            global.pausebutton = ord("P");
            
            resetPrompt = true;
            alarm[0] = 60;
        }
    }
    else if (keyboard_check_pressed(ord("Z"))) //global.shotbutton
    {
        scrSaveConfig();    //save changes
        instance_create(x,y,objOptionsMenu);
        instance_destroy();
    }
}
else
{
    if (keyboard_check_pressed(vk_anykey))  //check if a key is being pressed and if it is, store that key
    {
        if (select == 1) {global.leftbutton = keyboard_lastkey;}
        else if (select == 2) {global.rightbutton = keyboard_lastkey;}
        else if (select == 3) {global.upbutton = keyboard_lastkey;}
        else if (select == 4) {global.downbutton = keyboard_lastkey;}
        else if (select == 5) {global.jumpbutton = keyboard_lastkey;}
        else if (select == 6) {global.shotbutton = keyboard_lastkey;}
        else if (select == 7) {global.restartbutton = keyboard_lastkey;}
        else if (select == 8) {global.skipbutton = keyboard_lastkey;}
        else if (select == 9) {global.suicidebutton = keyboard_lastkey;}
        else if (select == 10) {global.pausebutton = keyboard_lastkey;}
        
        settingKey = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_font(fDefault24);

for(var i = 1; i &lt;= 11; i += 1)
{
    draw_set_halign(fa_left);
    draw_text(xSelector,ySelector+(i-1)*ySeperation+32,strSelect[i]);
    
    if(i == select)
    {
        draw_sprite(sprPlayerIdle,playerIndex,xSelector-20,ySelector+(i-1)*ySeperation+52);
        
        if (settingKey)
        {
            draw_set_halign(fa_right);
            draw_text(xSelector+xSeperation,ySelector+(i-1)*ySeperation+32,"Press the key to set");
        }
    }
    
    if (resetPrompt &amp;&amp; i == 11) //reset controls prompt
    {
        draw_set_halign(fa_right);
        draw_text(xSelector+xSeperation,ySelector+(i-1)*ySeperation+32,"Controls reset!");
    }
}

//button info
draw_set_color(c_black);
draw_set_font(fDefault12);
draw_set_halign(fa_left);
draw_text(34,556,"[Z] Back");
draw_set_halign(fa_right);
draw_text(766,556,"[Shift] Accept");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
